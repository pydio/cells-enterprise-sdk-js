{"version":3,"sources":["../../src/api/EnterprisePolicyServiceApi.js"],"names":["EnterprisePolicyServiceApi","apiClient","ApiClient","instance","uuid","postBody","undefined","Error","pathParams","queryParams","headerParams","formParams","authNames","contentTypes","accepts","returnType","RestDeleteResponse","callApi","deletePolicyWithHttpInfo","then","response_and_data","data","IpbanListBansCollection","listBansWithHttpInfo","name","IpbanIPsCollection","listIPsWithHttpInfo","body","IdmPolicyGroup","putPolicyWithHttpInfo","IpbanUnbanResponse","unbanWithHttpInfo","updateIPsWithHttpInfo"],"mappings":"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","sourcesContent":["/**\n * Pydio Cells Enterprise Rest API\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 2.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n\nimport ApiClient from \"../ApiClient\";\nimport IdmPolicyGroup from '../model/IdmPolicyGroup';\nimport IpbanIPsCollection from '../model/IpbanIPsCollection';\nimport IpbanListBansCollection from '../model/IpbanListBansCollection';\nimport IpbanUnbanRequest from '../model/IpbanUnbanRequest';\nimport IpbanUnbanResponse from '../model/IpbanUnbanResponse';\nimport RestDeleteResponse from '../model/RestDeleteResponse';\n\n/**\n* EnterprisePolicyService service.\n* @module api/EnterprisePolicyServiceApi\n* @version 2.0\n*/\nexport default class EnterprisePolicyServiceApi {\n\n    /**\n    * Constructs a new EnterprisePolicyServiceApi. \n    * @alias module:api/EnterprisePolicyServiceApi\n    * @class\n    * @param {module:ApiClient} apiClient Optional API client implementation to use,\n    * default to {@link module:ApiClient#instance} if unspecified.\n    */\n    constructor(apiClient) {\n        this.apiClient = apiClient || ApiClient.instance;\n    }\n\n\n\n    /**\n     * [Enterprise Only] Delete a security policy\n     * @param {String} uuid \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestDeleteResponse} and HTTP response\n     */\n    deletePolicyWithHttpInfo(uuid) {\n      let postBody = null;\n\n      // verify the required parameter 'uuid' is set\n      if (uuid === undefined || uuid === null) {\n        throw new Error(\"Missing the required parameter 'uuid' when calling deletePolicy\");\n      }\n\n\n      let pathParams = {\n        'Uuid': uuid\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = RestDeleteResponse;\n\n      return this.apiClient.callApi(\n        '/policy/{Uuid}', 'DELETE',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * [Enterprise Only] Delete a security policy\n     * @param {String} uuid \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestDeleteResponse}\n     */\n    deletePolicy(uuid) {\n      return this.deletePolicyWithHttpInfo(uuid)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * [Enterprise Only] List banned IPs\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/IpbanListBansCollection} and HTTP response\n     */\n    listBansWithHttpInfo() {\n      let postBody = null;\n\n\n      let pathParams = {\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = IpbanListBansCollection;\n\n      return this.apiClient.callApi(\n        '/policy/ipbans', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * [Enterprise Only] List banned IPs\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/IpbanListBansCollection}\n     */\n    listBans() {\n      return this.listBansWithHttpInfo()\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * [Enterprise Only] List white/black lists\n     * @param {String} name \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/IpbanIPsCollection} and HTTP response\n     */\n    listIPsWithHttpInfo(name) {\n      let postBody = null;\n\n      // verify the required parameter 'name' is set\n      if (name === undefined || name === null) {\n        throw new Error(\"Missing the required parameter 'name' when calling listIPs\");\n      }\n\n\n      let pathParams = {\n        'Name': name\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = IpbanIPsCollection;\n\n      return this.apiClient.callApi(\n        '/policy/iplists/{Name}', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * [Enterprise Only] List white/black lists\n     * @param {String} name \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/IpbanIPsCollection}\n     */\n    listIPs(name) {\n      return this.listIPsWithHttpInfo(name)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * [Enterprise Only] Update or create a security policy\n     * @param {module:model/IdmPolicyGroup} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/IdmPolicyGroup} and HTTP response\n     */\n    putPolicyWithHttpInfo(body) {\n      let postBody = body;\n\n      // verify the required parameter 'body' is set\n      if (body === undefined || body === null) {\n        throw new Error(\"Missing the required parameter 'body' when calling putPolicy\");\n      }\n\n\n      let pathParams = {\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = IdmPolicyGroup;\n\n      return this.apiClient.callApi(\n        '/policy', 'PUT',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * [Enterprise Only] Update or create a security policy\n     * @param {module:model/IdmPolicyGroup} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/IdmPolicyGroup}\n     */\n    putPolicy(body) {\n      return this.putPolicyWithHttpInfo(body)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * [Enterprise Only] List banned IPs\n     * @param {module:model/IpbanUnbanRequest} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/IpbanUnbanResponse} and HTTP response\n     */\n    unbanWithHttpInfo(body) {\n      let postBody = body;\n\n      // verify the required parameter 'body' is set\n      if (body === undefined || body === null) {\n        throw new Error(\"Missing the required parameter 'body' when calling unban\");\n      }\n\n\n      let pathParams = {\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = IpbanUnbanResponse;\n\n      return this.apiClient.callApi(\n        '/policy/ipbans', 'POST',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * [Enterprise Only] List banned IPs\n     * @param {module:model/IpbanUnbanRequest} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/IpbanUnbanResponse}\n     */\n    unban(body) {\n      return this.unbanWithHttpInfo(body)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * [Enterprise Only] Update white/black lists\n     * @param {module:model/IpbanIPsCollection} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/IpbanIPsCollection} and HTTP response\n     */\n    updateIPsWithHttpInfo(body) {\n      let postBody = body;\n\n      // verify the required parameter 'body' is set\n      if (body === undefined || body === null) {\n        throw new Error(\"Missing the required parameter 'body' when calling updateIPs\");\n      }\n\n\n      let pathParams = {\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = IpbanIPsCollection;\n\n      return this.apiClient.callApi(\n        '/policy/iplists', 'POST',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * [Enterprise Only] Update white/black lists\n     * @param {module:model/IpbanIPsCollection} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/IpbanIPsCollection}\n     */\n    updateIPs(body) {\n      return this.updateIPsWithHttpInfo(body)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n}\n"],"file":"EnterprisePolicyServiceApi.js"}