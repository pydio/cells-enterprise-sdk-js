{"version":3,"sources":["../../src/api/LicenseServiceApi.js"],"names":["LicenseServiceApi","apiClient","ApiClient","instance","opts","postBody","pathParams","queryParams","headerParams","formParams","authNames","contentTypes","accepts","returnType","CertLicenseStatsResponse","callApi","licenseStatsWithHttpInfo","then","response_and_data","data","body","undefined","Error","CertPutLicenseInfoResponse","putLicenseInfoWithHttpInfo"],"mappings":";;;;;;;AAcA;;AACA;;AACA;;AACA;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;IACqBA,iB;AAEjB;AACJ;AACA;AACA;AACA;AACA;AACA;AACI,6BAAYC,SAAZ,EAAuB;AAAA;;AACnB,SAAKA,SAAL,GAAiBA,SAAS,IAAIC,sBAAUC,QAAxC;AACH;AAID;AACJ;AACA;AACA;AACA;AACA;;;;;WACI,kCAAyBC,IAAzB,EAA+B;AAC7BA,MAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf;AACA,UAAIC,QAAQ,GAAG,IAAf;AAGA,UAAIC,UAAU,GAAG,EAAjB;AAEA,UAAIC,WAAW,GAAG;AAChB,wBAAgBH,IAAI,CAAC,cAAD;AADJ,OAAlB;AAGA,UAAII,YAAY,GAAG,EAAnB;AAEA,UAAIC,UAAU,GAAG,EAAjB;AAGA,UAAIC,SAAS,GAAG,EAAhB;AACA,UAAIC,YAAY,GAAG,CAAC,kBAAD,CAAnB;AACA,UAAIC,OAAO,GAAG,CAAC,kBAAD,CAAd;AACA,UAAIC,UAAU,GAAGC,oCAAjB;AAEA,aAAO,KAAKb,SAAL,CAAec,OAAf,CACL,gBADK,EACa,KADb,EAELT,UAFK,EAEOC,WAFP,EAEoBC,YAFpB,EAEkCC,UAFlC,EAE8CJ,QAF9C,EAGLK,SAHK,EAGMC,YAHN,EAGoBC,OAHpB,EAG6BC,UAH7B,CAAP;AAKD;AAED;AACJ;AACA;AACA;AACA;AACA;;;;WACI,sBAAaT,IAAb,EAAmB;AACjB,aAAO,KAAKY,wBAAL,CAA8BZ,IAA9B,EACJa,IADI,CACC,UAASC,iBAAT,EAA4B;AAChC,eAAOA,iBAAiB,CAACC,IAAzB;AACD,OAHI,CAAP;AAID;AAGD;AACJ;AACA;AACA;AACA;;;;WACI,oCAA2BC,IAA3B,EAAiC;AAC/B,UAAIf,QAAQ,GAAGe,IAAf,CAD+B,CAG/B;;AACA,UAAIA,IAAI,KAAKC,SAAT,IAAsBD,IAAI,KAAK,IAAnC,EAAyC;AACvC,cAAM,IAAIE,KAAJ,CAAU,mEAAV,CAAN;AACD;;AAGD,UAAIhB,UAAU,GAAG,EAAjB;AAEA,UAAIC,WAAW,GAAG,EAAlB;AAEA,UAAIC,YAAY,GAAG,EAAnB;AAEA,UAAIC,UAAU,GAAG,EAAjB;AAGA,UAAIC,SAAS,GAAG,EAAhB;AACA,UAAIC,YAAY,GAAG,CAAC,kBAAD,CAAnB;AACA,UAAIC,OAAO,GAAG,CAAC,kBAAD,CAAd;AACA,UAAIC,UAAU,GAAGU,sCAAjB;AAEA,aAAO,KAAKtB,SAAL,CAAec,OAAf,CACL,iBADK,EACc,KADd,EAELT,UAFK,EAEOC,WAFP,EAEoBC,YAFpB,EAEkCC,UAFlC,EAE8CJ,QAF9C,EAGLK,SAHK,EAGMC,YAHN,EAGoBC,OAHpB,EAG6BC,UAH7B,CAAP;AAKD;AAED;AACJ;AACA;AACA;AACA;;;;WACI,wBAAeO,IAAf,EAAqB;AACnB,aAAO,KAAKI,0BAAL,CAAgCJ,IAAhC,EACJH,IADI,CACC,UAASC,iBAAT,EAA4B;AAChC,eAAOA,iBAAiB,CAACC,IAAzB;AACD,OAHI,CAAP;AAID","sourcesContent":["/**\n * Pydio Cells Enterprise Rest API\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 2.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n\nimport ApiClient from \"../ApiClient\";\nimport CertLicenseStatsResponse from '../model/CertLicenseStatsResponse';\nimport CertPutLicenseInfoRequest from '../model/CertPutLicenseInfoRequest';\nimport CertPutLicenseInfoResponse from '../model/CertPutLicenseInfoResponse';\n\n/**\n* LicenseService service.\n* @module api/LicenseServiceApi\n* @version 2.0\n*/\nexport default class LicenseServiceApi {\n\n    /**\n    * Constructs a new LicenseServiceApi. \n    * @alias module:api/LicenseServiceApi\n    * @class\n    * @param {module:ApiClient} apiClient Optional API client implementation to use,\n    * default to {@link module:ApiClient#instance} if unspecified.\n    */\n    constructor(apiClient) {\n        this.apiClient = apiClient || ApiClient.instance;\n    }\n\n\n\n    /**\n     * [Enterprise Only] Display statistics about licenses usage\n     * @param {Object} opts Optional parameters\n     * @param {Boolean} opts.forceRefresh \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/CertLicenseStatsResponse} and HTTP response\n     */\n    licenseStatsWithHttpInfo(opts) {\n      opts = opts || {};\n      let postBody = null;\n\n\n      let pathParams = {\n      };\n      let queryParams = {\n        'ForceRefresh': opts['forceRefresh']\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = CertLicenseStatsResponse;\n\n      return this.apiClient.callApi(\n        '/license/stats', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * [Enterprise Only] Display statistics about licenses usage\n     * @param {Object} opts Optional parameters\n     * @param {Boolean} opts.forceRefresh \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/CertLicenseStatsResponse}\n     */\n    licenseStats(opts) {\n      return this.licenseStatsWithHttpInfo(opts)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * [Enterprise Only] Update License String\n     * @param {module:model/CertPutLicenseInfoRequest} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/CertPutLicenseInfoResponse} and HTTP response\n     */\n    putLicenseInfoWithHttpInfo(body) {\n      let postBody = body;\n\n      // verify the required parameter 'body' is set\n      if (body === undefined || body === null) {\n        throw new Error(\"Missing the required parameter 'body' when calling putLicenseInfo\");\n      }\n\n\n      let pathParams = {\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = CertPutLicenseInfoResponse;\n\n      return this.apiClient.callApi(\n        '/license/update', 'PUT',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * [Enterprise Only] Update License String\n     * @param {module:model/CertPutLicenseInfoRequest} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/CertPutLicenseInfoResponse}\n     */\n    putLicenseInfo(body) {\n      return this.putLicenseInfoWithHttpInfo(body)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n}\n"],"file":"LicenseServiceApi.js"}