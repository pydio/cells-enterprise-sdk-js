{"version":3,"sources":["../../src/api/EnterpriseConfigServiceApi.js"],"names":["EnterpriseConfigServiceApi","apiClient","ApiClient","instance","configId","opts","postBody","undefined","Error","pathParams","queryParams","buildCollectionParam","headerParams","formParams","authNames","contentTypes","accepts","returnType","EntExternalDirectoryResponse","callApi","deleteExternalDirectoryWithHttpInfo","then","response_and_data","data","clientId","EntOAuth2ClientResponse","deleteOAuth2ClientWithHttpInfo","id","EntOAuth2ConnectorResponse","deleteOAuth2ConnectorWithHttpInfo","uuid","EntDeleteVersioningPolicyResponse","deleteVersioningPolicyWithHttpInfo","EntDeleteVirtualNodeResponse","deleteVirtualNodeWithHttpInfo","EntExternalDirectoryCollection","listExternalDirectoriesWithHttpInfo","EntOAuth2ClientCollection","listOAuth2ClientsWithHttpInfo","EntOAuth2ConnectorCollection","listOAuth2ConnectorsWithHttpInfo","EntListSitesResponse","listSitesWithHttpInfo","body","EntExternalDirectoryTestResponse","pingExternalDirectoryWithHttpInfo","putExternalDirectoryWithHttpInfo","putOAuth2ClientWithHttpInfo","putOAuth2ConnectorWithHttpInfo","putOAuth2ConnectorsWithHttpInfo","TreeVersioningPolicy","putVersioningPolicyWithHttpInfo","TreeNode","putVirtualNodeWithHttpInfo","searchExternalDirectoryWithHttpInfo"],"mappings":"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D,CANG;AAOhB,oBAAY,KAAKJ,SAAL,CAAeU,oBAAf,CAAoCN,IAAI,CAAC,UAAD,CAAxC,EAAsD,OAAtD;AAPI,OAAlB;AASA,UAAIO,YAAY,GAAG,EAAnB;AAEA,UAAIC,UAAU,GAAG,EAAjB;AAGA,UAAIC,SAAS,GAAG,EAAhB;AACA,UAAIC,YAAY,GAAG,EAAnB;AACA,UAAIC,OAAO,GAAG,CAAC,kBAAD,CAAd;AACA,UAAIC,UAAU,GAAGQ,mCAAjB;AACA,aAAO,KAAKxB,SAAL,CAAekB,OAAf,CACL,mCADK,EACgC,QADhC,EAELV,UAFK,EAEOC,WAFP,EAEoBE,YAFpB,EAEkCC,UAFlC,EAE8CP,QAF9C,EAGLQ,SAHK,EAGMC,YAHN,EAGoBC,OAHpB,EAG6BC,UAH7B,EAGyC,IAHzC,CAAP;AAKD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,4BAAmBO,QAAnB,EAA6BnB,IAA7B,EAAmC;AACjC,aAAO,KAAKqB,8BAAL,CAAoCF,QAApC,EAA8CnB,IAA9C,EACJgB,IADI,CACC,UAASC,iBAAT,EAA4B;AAChC,eAAOA,iBAAiB,CAACC,IAAzB;AACD,OAHI,CAAP;AAID;AAGD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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AHK,EAGMC,YAHN,EAGoBC,OAHpB,EAG6BC,UAH7B,EAGyC,IAHzC,CAAP;AAKD;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,+BAAsBU,EAAtB,EAA0BtB,IAA1B,EAAgC;AAC9B,aAAO,KAAKwB,iCAAL,CAAuCF,EAAvC,EAA2CtB,IAA3C,EACJgB,IADI,CACC,UAASC,iBAAT,EAA4B;AAChC,eAAOA,iBAAiB,CAACC,IAAzB;AACD,OAHI,CAAP;AAID;AAGD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,4CAAmCO,IAAnC,EAAyCzB,IAAzC,EAA+C;AAC7CA,MAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf;AACA,UAAIC,QAAQ,GAAG,IAAf,CAF6C,CAG7C;;AACA,UAAIwB,IAAI,KAAKvB,SAAT,IAAsBuB,IAAI,KAAK,IAAnC,EAAyC;AACvC,cAAM,IAAItB,KAAJ,CAAU,2EAAV,CAAN;AACD;;AAED,UAAIC,UAAU,GAAG;AACf,gBAAQqB;AADO,OAAjB;AAGA,UAAIpB,WAAW,GAAG;AAChB,gBAAQL,IAAI,CAAC,MAAD,CADI;AAEhB,uBAAeA,IAAI,CAAC,aAAD,C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","sourcesContent":["/**\n * Pydio Cells Enterprise Rest API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 2.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n *\n */\n\n\nimport ApiClient from \"../ApiClient\";\nimport AuthOAuth2ConnectorCollection from '../model/AuthOAuth2ConnectorCollection';\nimport EntDeleteVersioningPolicyResponse from '../model/EntDeleteVersioningPolicyResponse';\nimport EntDeleteVirtualNodeResponse from '../model/EntDeleteVirtualNodeResponse';\nimport EntExternalDirectoryCollection from '../model/EntExternalDirectoryCollection';\nimport EntExternalDirectoryConfig from '../model/EntExternalDirectoryConfig';\nimport EntExternalDirectoryPingRequest from '../model/EntExternalDirectoryPingRequest';\nimport EntExternalDirectoryResponse from '../model/EntExternalDirectoryResponse';\nimport EntExternalDirectorySearchRequest from '../model/EntExternalDirectorySearchRequest';\nimport EntExternalDirectoryTestResponse from '../model/EntExternalDirectoryTestResponse';\nimport EntListSitesResponse from '../model/EntListSitesResponse';\nimport EntOAuth2ClientCollection from '../model/EntOAuth2ClientCollection';\nimport EntOAuth2ClientResponse from '../model/EntOAuth2ClientResponse';\nimport EntOAuth2ConnectorCollection from '../model/EntOAuth2ConnectorCollection';\nimport EntOAuth2ConnectorResponse from '../model/EntOAuth2ConnectorResponse';\nimport InlineObject from '../model/InlineObject';\nimport InlineObject1 from '../model/InlineObject1';\nimport InlineObject2 from '../model/InlineObject2';\nimport InlineObject3 from '../model/InlineObject3';\nimport RpcStatus from '../model/RpcStatus';\nimport TreeNode from '../model/TreeNode';\nimport TreeVersioningPolicy from '../model/TreeVersioningPolicy';\n\n/**\n* EnterpriseConfigService service.\n* @module api/EnterpriseConfigServiceApi\n* @version 2.0\n*/\nexport default class EnterpriseConfigServiceApi {\n\n    /**\n    * Constructs a new EnterpriseConfigServiceApi. \n    * @alias module:api/EnterpriseConfigServiceApi\n    * @class\n    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,\n    * default to {@link module:ApiClient#instance} if unspecified.\n    */\n    constructor(apiClient) {\n        this.apiClient = apiClient || ApiClient.instance;\n    }\n\n\n\n    /**\n     * [Enterprise Only] Delete external directory\n     * @param {String} configId Id of the external directory\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.configConfigId \n     * @param {String} opts.configDomainName \n     * @param {String} opts.configHost \n     * @param {String} opts.configConnection \n     * @param {String} opts.configBindDN \n     * @param {String} opts.configBindPW \n     * @param {Boolean} opts.configBindAnonymous \n     * @param {Boolean} opts.configSkipVerifyCertificate \n     * @param {String} opts.configRootCA \n     * @param {String} opts.configRootCAData To be converted to []byte\n     * @param {Number} opts.configPageSize \n     * @param {Array.<String>} opts.configUserDNs \n     * @param {String} opts.configUserFilter \n     * @param {String} opts.configUserIDAttribute \n     * @param {String} opts.configUserDisplayAttribute \n     * @param {String} opts.configUserScope \n     * @param {String} opts.configMemberOfMappingMappingLeftAttribute \n     * @param {String} opts.configMemberOfMappingMappingRightAttribute \n     * @param {String} opts.configMemberOfMappingMappingRuleString \n     * @param {String} opts.configMemberOfMappingMappingRolePrefix \n     * @param {Array.<String>} opts.configMemberOfMappingGroupFilterDNs \n     * @param {String} opts.configMemberOfMappingGroupFilterFilter \n     * @param {String} opts.configMemberOfMappingGroupFilterIDAttribute \n     * @param {String} opts.configMemberOfMappingGroupFilterDisplayAttribute \n     * @param {String} opts.configMemberOfMappingGroupFilterScope \n     * @param {Boolean} opts.configMemberOfMappingSupportNestedGroup \n     * @param {Boolean} opts.configMemberOfMappingRealMemberOf \n     * @param {String} opts.configMemberOfMappingRealMemberOfAttribute \n     * @param {String} opts.configMemberOfMappingRealMemberOfValueFormat \n     * @param {String} opts.configMemberOfMappingPydioMemberOfAttribute \n     * @param {String} opts.configMemberOfMappingPydioMemberOfValueFormat \n     * @param {String} opts.configRolePrefix \n     * @param {String} opts.configSchedule \n     * @param {String} opts.configSchedulerDetails \n     * @param {Boolean} opts.configSyncOnly \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EntExternalDirectoryResponse} and HTTP response\n     */\n    deleteExternalDirectoryWithHttpInfo(configId, opts) {\n      opts = opts || {};\n      let postBody = null;\n      // verify the required parameter 'configId' is set\n      if (configId === undefined || configId === null) {\n        throw new Error(\"Missing the required parameter 'configId' when calling deleteExternalDirectory\");\n      }\n\n      let pathParams = {\n        'ConfigId': configId\n      };\n      let queryParams = {\n        'Config.ConfigId': opts['configConfigId'],\n        'Config.DomainName': opts['configDomainName'],\n        'Config.Host': opts['configHost'],\n        'Config.Connection': opts['configConnection'],\n        'Config.BindDN': opts['configBindDN'],\n        'Config.BindPW': opts['configBindPW'],\n        'Config.BindAnonymous': opts['configBindAnonymous'],\n        'Config.SkipVerifyCertificate': opts['configSkipVerifyCertificate'],\n        'Config.RootCA': opts['configRootCA'],\n        'Config.RootCAData': opts['configRootCAData'],\n        'Config.PageSize': opts['configPageSize'],\n        'Config.User.DNs': this.apiClient.buildCollectionParam(opts['configUserDNs'], 'multi'),\n        'Config.User.Filter': opts['configUserFilter'],\n        'Config.User.IDAttribute': opts['configUserIDAttribute'],\n        'Config.User.DisplayAttribute': opts['configUserDisplayAttribute'],\n        'Config.User.Scope': opts['configUserScope'],\n        'Config.MemberOfMapping.Mapping.LeftAttribute': opts['configMemberOfMappingMappingLeftAttribute'],\n        'Config.MemberOfMapping.Mapping.RightAttribute': opts['configMemberOfMappingMappingRightAttribute'],\n        'Config.MemberOfMapping.Mapping.RuleString': opts['configMemberOfMappingMappingRuleString'],\n        'Config.MemberOfMapping.Mapping.RolePrefix': opts['configMemberOfMappingMappingRolePrefix'],\n        'Config.MemberOfMapping.GroupFilter.DNs': this.apiClient.buildCollectionParam(opts['configMemberOfMappingGroupFilterDNs'], 'multi'),\n        'Config.MemberOfMapping.GroupFilter.Filter': opts['configMemberOfMappingGroupFilterFilter'],\n        'Config.MemberOfMapping.GroupFilter.IDAttribute': opts['configMemberOfMappingGroupFilterIDAttribute'],\n        'Config.MemberOfMapping.GroupFilter.DisplayAttribute': opts['configMemberOfMappingGroupFilterDisplayAttribute'],\n        'Config.MemberOfMapping.GroupFilter.Scope': opts['configMemberOfMappingGroupFilterScope'],\n        'Config.MemberOfMapping.SupportNestedGroup': opts['configMemberOfMappingSupportNestedGroup'],\n        'Config.MemberOfMapping.RealMemberOf': opts['configMemberOfMappingRealMemberOf'],\n        'Config.MemberOfMapping.RealMemberOfAttribute': opts['configMemberOfMappingRealMemberOfAttribute'],\n        'Config.MemberOfMapping.RealMemberOfValueFormat': opts['configMemberOfMappingRealMemberOfValueFormat'],\n        'Config.MemberOfMapping.PydioMemberOfAttribute': opts['configMemberOfMappingPydioMemberOfAttribute'],\n        'Config.MemberOfMapping.PydioMemberOfValueFormat': opts['configMemberOfMappingPydioMemberOfValueFormat'],\n        'Config.RolePrefix': opts['configRolePrefix'],\n        'Config.Schedule': opts['configSchedule'],\n        'Config.SchedulerDetails': opts['configSchedulerDetails'],\n        'Config.SyncOnly': opts['configSyncOnly']\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = [];\n      let accepts = ['application/json'];\n      let returnType = EntExternalDirectoryResponse;\n      return this.apiClient.callApi(\n        '/config/directories/{ConfigId}', 'DELETE',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, null\n      );\n    }\n\n    /**\n     * [Enterprise Only] Delete external directory\n     * @param {String} configId Id of the external directory\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.configConfigId \n     * @param {String} opts.configDomainName \n     * @param {String} opts.configHost \n     * @param {String} opts.configConnection \n     * @param {String} opts.configBindDN \n     * @param {String} opts.configBindPW \n     * @param {Boolean} opts.configBindAnonymous \n     * @param {Boolean} opts.configSkipVerifyCertificate \n     * @param {String} opts.configRootCA \n     * @param {String} opts.configRootCAData To be converted to []byte\n     * @param {Number} opts.configPageSize \n     * @param {Array.<String>} opts.configUserDNs \n     * @param {String} opts.configUserFilter \n     * @param {String} opts.configUserIDAttribute \n     * @param {String} opts.configUserDisplayAttribute \n     * @param {String} opts.configUserScope \n     * @param {String} opts.configMemberOfMappingMappingLeftAttribute \n     * @param {String} opts.configMemberOfMappingMappingRightAttribute \n     * @param {String} opts.configMemberOfMappingMappingRuleString \n     * @param {String} opts.configMemberOfMappingMappingRolePrefix \n     * @param {Array.<String>} opts.configMemberOfMappingGroupFilterDNs \n     * @param {String} opts.configMemberOfMappingGroupFilterFilter \n     * @param {String} opts.configMemberOfMappingGroupFilterIDAttribute \n     * @param {String} opts.configMemberOfMappingGroupFilterDisplayAttribute \n     * @param {String} opts.configMemberOfMappingGroupFilterScope \n     * @param {Boolean} opts.configMemberOfMappingSupportNestedGroup \n     * @param {Boolean} opts.configMemberOfMappingRealMemberOf \n     * @param {String} opts.configMemberOfMappingRealMemberOfAttribute \n     * @param {String} opts.configMemberOfMappingRealMemberOfValueFormat \n     * @param {String} opts.configMemberOfMappingPydioMemberOfAttribute \n     * @param {String} opts.configMemberOfMappingPydioMemberOfValueFormat \n     * @param {String} opts.configRolePrefix \n     * @param {String} opts.configSchedule \n     * @param {String} opts.configSchedulerDetails \n     * @param {Boolean} opts.configSyncOnly \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EntExternalDirectoryResponse}\n     */\n    deleteExternalDirectory(configId, opts) {\n      return this.deleteExternalDirectoryWithHttpInfo(configId, opts)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * [Enterprise Only] Delete an oauth2 client\n     * @param {String} clientId \n     * @param {Object} opts Optional parameters\n     * @param {String} opts.clientName \n     * @param {String} opts.clientSecret \n     * @param {Array.<String>} opts.redirectUris \n     * @param {Array.<String>} opts.grantTypes \n     * @param {Array.<String>} opts.responseTypes \n     * @param {String} opts.scope \n     * @param {Array.<String>} opts.audience \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EntOAuth2ClientResponse} and HTTP response\n     */\n    deleteOAuth2ClientWithHttpInfo(clientId, opts) {\n      opts = opts || {};\n      let postBody = null;\n      // verify the required parameter 'clientId' is set\n      if (clientId === undefined || clientId === null) {\n        throw new Error(\"Missing the required parameter 'clientId' when calling deleteOAuth2Client\");\n      }\n\n      let pathParams = {\n        'client_id': clientId\n      };\n      let queryParams = {\n        'client_name': opts['clientName'],\n        'client_secret': opts['clientSecret'],\n        'redirect_uris': this.apiClient.buildCollectionParam(opts['redirectUris'], 'multi'),\n        'grant_types': this.apiClient.buildCollectionParam(opts['grantTypes'], 'multi'),\n        'response_types': this.apiClient.buildCollectionParam(opts['responseTypes'], 'multi'),\n        'scope': opts['scope'],\n        'audience': this.apiClient.buildCollectionParam(opts['audience'], 'multi')\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = [];\n      let accepts = ['application/json'];\n      let returnType = EntOAuth2ClientResponse;\n      return this.apiClient.callApi(\n        '/config/oauth2clients/{client_id}', 'DELETE',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, null\n      );\n    }\n\n    /**\n     * [Enterprise Only] Delete an oauth2 client\n     * @param {String} clientId \n     * @param {Object} opts Optional parameters\n     * @param {String} opts.clientName \n     * @param {String} opts.clientSecret \n     * @param {Array.<String>} opts.redirectUris \n     * @param {Array.<String>} opts.grantTypes \n     * @param {Array.<String>} opts.responseTypes \n     * @param {String} opts.scope \n     * @param {Array.<String>} opts.audience \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EntOAuth2ClientResponse}\n     */\n    deleteOAuth2Client(clientId, opts) {\n      return this.deleteOAuth2ClientWithHttpInfo(clientId, opts)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * [Enterprise Only] Delete an oauth2 client\n     * @param {String} id \n     * @param {Object} opts Optional parameters\n     * @param {String} opts.type \n     * @param {String} opts.name \n     * @param {String} opts.configoidcIssuer \n     * @param {String} opts.configoidcClientID \n     * @param {String} opts.configoidcClientSecret \n     * @param {String} opts.configoidcRedirectURI \n     * @param {Boolean} opts.configoidcBasicAuthUnsupported \n     * @param {Array.<String>} opts.configoidcHostedDomains \n     * @param {Array.<String>} opts.configoidcScopes \n     * @param {Boolean} opts.configoidcInsecureSkipEmailVerified \n     * @param {Boolean} opts.configoidcGetUserInfo \n     * @param {String} opts.configoidcUserIDKey \n     * @param {String} opts.configoidcUserNameKey \n     * @param {String} opts.configsamlSsoURL \n     * @param {String} opts.configsamlCa \n     * @param {String} opts.configsamlRedirectURI \n     * @param {String} opts.configsamlUsernameAttr \n     * @param {String} opts.configsamlEmailAttr \n     * @param {String} opts.configsamlGroupsAttr \n     * @param {String} opts.configsamlCaData \n     * @param {Boolean} opts.configsamlInsecureSkipSignatureValidation \n     * @param {String} opts.configsamlEntityIssuer \n     * @param {String} opts.configsamlSsoIssuer \n     * @param {String} opts.configsamlGroupsDelim \n     * @param {String} opts.configsamlNameIDPolicyFormat \n     * @param {String} opts.configbitbucketClientID \n     * @param {String} opts.configbitbucketClientSecret \n     * @param {String} opts.configbitbucketRedirectURI \n     * @param {Array.<String>} opts.configbitbucketTeams \n     * @param {String} opts.configgithubClientID \n     * @param {String} opts.configgithubClientSecret \n     * @param {String} opts.configgithubRedirectURI \n     * @param {Boolean} opts.configgithubLoadAllGroups \n     * @param {String} opts.configgithubTeamNameField \n     * @param {Boolean} opts.configgithubUseLoginAsID \n     * @param {String} opts.configgithubHostName For GitHub enterprise\n     * @param {String} opts.configgithubRootCA \n     * @param {String} opts.configgitlabBaseURL \n     * @param {String} opts.configgitlabClientID \n     * @param {String} opts.configgitlabClientSecret \n     * @param {String} opts.configgitlabRedirectURI \n     * @param {Array.<String>} opts.configgitlabGroups \n     * @param {Boolean} opts.configgitlabUserLoginAsID \n     * @param {String} opts.configlinkedinClientID \n     * @param {String} opts.configlinkedinClientSecret \n     * @param {String} opts.configlinkedinRedirectURI \n     * @param {String} opts.configmicrosoftClientID \n     * @param {String} opts.configmicrosoftClientSecret \n     * @param {String} opts.configmicrosoftRedirectURI \n     * @param {String} opts.configmicrosoftTenant \n     * @param {Array.<String>} opts.configmicrosoftGroups \n     * @param {Boolean} opts.configmicrosoftOnlySecurityGroups \n     * @param {String} opts.configmicrosoftGroupNameFormat \n     * @param {Boolean} opts.configmicrosoftUseGroupsAsWhitelist \n     * @param {String} opts.configldapConfigId \n     * @param {String} opts.configldapDomainName \n     * @param {String} opts.configldapHost \n     * @param {String} opts.configldapConnection \n     * @param {String} opts.configldapBindDN \n     * @param {String} opts.configldapBindPW \n     * @param {Boolean} opts.configldapBindAnonymous \n     * @param {Boolean} opts.configldapSkipVerifyCertificate \n     * @param {String} opts.configldapRootCA \n     * @param {String} opts.configldapRootCAData To be converted to []byte\n     * @param {Number} opts.configldapPageSize \n     * @param {Array.<String>} opts.configldapUserDNs \n     * @param {String} opts.configldapUserFilter \n     * @param {String} opts.configldapUserIDAttribute \n     * @param {String} opts.configldapUserDisplayAttribute \n     * @param {String} opts.configldapUserScope \n     * @param {String} opts.configldapMemberOfMappingMappingLeftAttribute \n     * @param {String} opts.configldapMemberOfMappingMappingRightAttribute \n     * @param {String} opts.configldapMemberOfMappingMappingRuleString \n     * @param {String} opts.configldapMemberOfMappingMappingRolePrefix \n     * @param {Array.<String>} opts.configldapMemberOfMappingGroupFilterDNs \n     * @param {String} opts.configldapMemberOfMappingGroupFilterFilter \n     * @param {String} opts.configldapMemberOfMappingGroupFilterIDAttribute \n     * @param {String} opts.configldapMemberOfMappingGroupFilterDisplayAttribute \n     * @param {String} opts.configldapMemberOfMappingGroupFilterScope \n     * @param {Boolean} opts.configldapMemberOfMappingSupportNestedGroup \n     * @param {Boolean} opts.configldapMemberOfMappingRealMemberOf \n     * @param {String} opts.configldapMemberOfMappingRealMemberOfAttribute \n     * @param {String} opts.configldapMemberOfMappingRealMemberOfValueFormat \n     * @param {String} opts.configldapMemberOfMappingPydioMemberOfAttribute \n     * @param {String} opts.configldapMemberOfMappingPydioMemberOfValueFormat \n     * @param {String} opts.configldapRolePrefix \n     * @param {String} opts.configldapSchedule \n     * @param {String} opts.configldapSchedulerDetails \n     * @param {Boolean} opts.configldapSyncOnly \n     * @param {String} opts.configoauthBaseURL \n     * @param {String} opts.configoauthAuthorizeURL \n     * @param {String} opts.configoauthTokenURL \n     * @param {String} opts.configoauthUserInfoURL \n     * @param {String} opts.configoauthClientID \n     * @param {String} opts.configoauthClientSecret \n     * @param {String} opts.configoauthRedirectURI \n     * @param {Array.<String>} opts.configoauthGroups \n     * @param {Boolean} opts.configoauthUseLoginAsID \n     * @param {Boolean} opts.configoauthUseBrokenAuthHeaderProvider \n     * @param {String} opts.configmockJsonIdentity \n     * @param {Array.<String>} opts.sites \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EntOAuth2ConnectorResponse} and HTTP response\n     */\n    deleteOAuth2ConnectorWithHttpInfo(id, opts) {\n      opts = opts || {};\n      let postBody = null;\n      // verify the required parameter 'id' is set\n      if (id === undefined || id === null) {\n        throw new Error(\"Missing the required parameter 'id' when calling deleteOAuth2Connector\");\n      }\n\n      let pathParams = {\n        'id': id\n      };\n      let queryParams = {\n        'type': opts['type'],\n        'name': opts['name'],\n        'configoidc.issuer': opts['configoidcIssuer'],\n        'configoidc.clientID': opts['configoidcClientID'],\n        'configoidc.clientSecret': opts['configoidcClientSecret'],\n        'configoidc.redirectURI': opts['configoidcRedirectURI'],\n        'configoidc.basicAuthUnsupported': opts['configoidcBasicAuthUnsupported'],\n        'configoidc.hostedDomains': this.apiClient.buildCollectionParam(opts['configoidcHostedDomains'], 'multi'),\n        'configoidc.scopes': this.apiClient.buildCollectionParam(opts['configoidcScopes'], 'multi'),\n        'configoidc.insecureSkipEmailVerified': opts['configoidcInsecureSkipEmailVerified'],\n        'configoidc.getUserInfo': opts['configoidcGetUserInfo'],\n        'configoidc.userIDKey': opts['configoidcUserIDKey'],\n        'configoidc.userNameKey': opts['configoidcUserNameKey'],\n        'configsaml.ssoURL': opts['configsamlSsoURL'],\n        'configsaml.ca': opts['configsamlCa'],\n        'configsaml.redirectURI': opts['configsamlRedirectURI'],\n        'configsaml.usernameAttr': opts['configsamlUsernameAttr'],\n        'configsaml.emailAttr': opts['configsamlEmailAttr'],\n        'configsaml.groupsAttr': opts['configsamlGroupsAttr'],\n        'configsaml.caData': opts['configsamlCaData'],\n        'configsaml.insecureSkipSignatureValidation': opts['configsamlInsecureSkipSignatureValidation'],\n        'configsaml.entityIssuer': opts['configsamlEntityIssuer'],\n        'configsaml.ssoIssuer': opts['configsamlSsoIssuer'],\n        'configsaml.groupsDelim': opts['configsamlGroupsDelim'],\n        'configsaml.nameIDPolicyFormat': opts['configsamlNameIDPolicyFormat'],\n        'configbitbucket.clientID': opts['configbitbucketClientID'],\n        'configbitbucket.clientSecret': opts['configbitbucketClientSecret'],\n        'configbitbucket.redirectURI': opts['configbitbucketRedirectURI'],\n        'configbitbucket.teams': this.apiClient.buildCollectionParam(opts['configbitbucketTeams'], 'multi'),\n        'configgithub.clientID': opts['configgithubClientID'],\n        'configgithub.clientSecret': opts['configgithubClientSecret'],\n        'configgithub.redirectURI': opts['configgithubRedirectURI'],\n        'configgithub.loadAllGroups': opts['configgithubLoadAllGroups'],\n        'configgithub.teamNameField': opts['configgithubTeamNameField'],\n        'configgithub.useLoginAsID': opts['configgithubUseLoginAsID'],\n        'configgithub.hostName': opts['configgithubHostName'],\n        'configgithub.rootCA': opts['configgithubRootCA'],\n        'configgitlab.baseURL': opts['configgitlabBaseURL'],\n        'configgitlab.clientID': opts['configgitlabClientID'],\n        'configgitlab.clientSecret': opts['configgitlabClientSecret'],\n        'configgitlab.redirectURI': opts['configgitlabRedirectURI'],\n        'configgitlab.groups': this.apiClient.buildCollectionParam(opts['configgitlabGroups'], 'multi'),\n        'configgitlab.userLoginAsID': opts['configgitlabUserLoginAsID'],\n        'configlinkedin.clientID': opts['configlinkedinClientID'],\n        'configlinkedin.clientSecret': opts['configlinkedinClientSecret'],\n        'configlinkedin.redirectURI': opts['configlinkedinRedirectURI'],\n        'configmicrosoft.clientID': opts['configmicrosoftClientID'],\n        'configmicrosoft.clientSecret': opts['configmicrosoftClientSecret'],\n        'configmicrosoft.redirectURI': opts['configmicrosoftRedirectURI'],\n        'configmicrosoft.tenant': opts['configmicrosoftTenant'],\n        'configmicrosoft.groups': this.apiClient.buildCollectionParam(opts['configmicrosoftGroups'], 'multi'),\n        'configmicrosoft.onlySecurityGroups': opts['configmicrosoftOnlySecurityGroups'],\n        'configmicrosoft.groupNameFormat': opts['configmicrosoftGroupNameFormat'],\n        'configmicrosoft.useGroupsAsWhitelist': opts['configmicrosoftUseGroupsAsWhitelist'],\n        'configldap.ConfigId': opts['configldapConfigId'],\n        'configldap.DomainName': opts['configldapDomainName'],\n        'configldap.Host': opts['configldapHost'],\n        'configldap.Connection': opts['configldapConnection'],\n        'configldap.BindDN': opts['configldapBindDN'],\n        'configldap.BindPW': opts['configldapBindPW'],\n        'configldap.BindAnonymous': opts['configldapBindAnonymous'],\n        'configldap.SkipVerifyCertificate': opts['configldapSkipVerifyCertificate'],\n        'configldap.RootCA': opts['configldapRootCA'],\n        'configldap.RootCAData': opts['configldapRootCAData'],\n        'configldap.PageSize': opts['configldapPageSize'],\n        'configldap.User.DNs': this.apiClient.buildCollectionParam(opts['configldapUserDNs'], 'multi'),\n        'configldap.User.Filter': opts['configldapUserFilter'],\n        'configldap.User.IDAttribute': opts['configldapUserIDAttribute'],\n        'configldap.User.DisplayAttribute': opts['configldapUserDisplayAttribute'],\n        'configldap.User.Scope': opts['configldapUserScope'],\n        'configldap.MemberOfMapping.Mapping.LeftAttribute': opts['configldapMemberOfMappingMappingLeftAttribute'],\n        'configldap.MemberOfMapping.Mapping.RightAttribute': opts['configldapMemberOfMappingMappingRightAttribute'],\n        'configldap.MemberOfMapping.Mapping.RuleString': opts['configldapMemberOfMappingMappingRuleString'],\n        'configldap.MemberOfMapping.Mapping.RolePrefix': opts['configldapMemberOfMappingMappingRolePrefix'],\n        'configldap.MemberOfMapping.GroupFilter.DNs': this.apiClient.buildCollectionParam(opts['configldapMemberOfMappingGroupFilterDNs'], 'multi'),\n        'configldap.MemberOfMapping.GroupFilter.Filter': opts['configldapMemberOfMappingGroupFilterFilter'],\n        'configldap.MemberOfMapping.GroupFilter.IDAttribute': opts['configldapMemberOfMappingGroupFilterIDAttribute'],\n        'configldap.MemberOfMapping.GroupFilter.DisplayAttribute': opts['configldapMemberOfMappingGroupFilterDisplayAttribute'],\n        'configldap.MemberOfMapping.GroupFilter.Scope': opts['configldapMemberOfMappingGroupFilterScope'],\n        'configldap.MemberOfMapping.SupportNestedGroup': opts['configldapMemberOfMappingSupportNestedGroup'],\n        'configldap.MemberOfMapping.RealMemberOf': opts['configldapMemberOfMappingRealMemberOf'],\n        'configldap.MemberOfMapping.RealMemberOfAttribute': opts['configldapMemberOfMappingRealMemberOfAttribute'],\n        'configldap.MemberOfMapping.RealMemberOfValueFormat': opts['configldapMemberOfMappingRealMemberOfValueFormat'],\n        'configldap.MemberOfMapping.PydioMemberOfAttribute': opts['configldapMemberOfMappingPydioMemberOfAttribute'],\n        'configldap.MemberOfMapping.PydioMemberOfValueFormat': opts['configldapMemberOfMappingPydioMemberOfValueFormat'],\n        'configldap.RolePrefix': opts['configldapRolePrefix'],\n        'configldap.Schedule': opts['configldapSchedule'],\n        'configldap.SchedulerDetails': opts['configldapSchedulerDetails'],\n        'configldap.SyncOnly': opts['configldapSyncOnly'],\n        'configoauth.baseURL': opts['configoauthBaseURL'],\n        'configoauth.authorizeURL': opts['configoauthAuthorizeURL'],\n        'configoauth.tokenURL': opts['configoauthTokenURL'],\n        'configoauth.userInfoURL': opts['configoauthUserInfoURL'],\n        'configoauth.clientID': opts['configoauthClientID'],\n        'configoauth.clientSecret': opts['configoauthClientSecret'],\n        'configoauth.redirectURI': opts['configoauthRedirectURI'],\n        'configoauth.groups': this.apiClient.buildCollectionParam(opts['configoauthGroups'], 'multi'),\n        'configoauth.useLoginAsID': opts['configoauthUseLoginAsID'],\n        'configoauth.useBrokenAuthHeaderProvider': opts['configoauthUseBrokenAuthHeaderProvider'],\n        'configmock.jsonIdentity': opts['configmockJsonIdentity'],\n        'sites': this.apiClient.buildCollectionParam(opts['sites'], 'multi')\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = [];\n      let accepts = ['application/json'];\n      let returnType = EntOAuth2ConnectorResponse;\n      return this.apiClient.callApi(\n        '/config/oauth2connectors/{id}', 'DELETE',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, null\n      );\n    }\n\n    /**\n     * [Enterprise Only] Delete an oauth2 client\n     * @param {String} id \n     * @param {Object} opts Optional parameters\n     * @param {String} opts.type \n     * @param {String} opts.name \n     * @param {String} opts.configoidcIssuer \n     * @param {String} opts.configoidcClientID \n     * @param {String} opts.configoidcClientSecret \n     * @param {String} opts.configoidcRedirectURI \n     * @param {Boolean} opts.configoidcBasicAuthUnsupported \n     * @param {Array.<String>} opts.configoidcHostedDomains \n     * @param {Array.<String>} opts.configoidcScopes \n     * @param {Boolean} opts.configoidcInsecureSkipEmailVerified \n     * @param {Boolean} opts.configoidcGetUserInfo \n     * @param {String} opts.configoidcUserIDKey \n     * @param {String} opts.configoidcUserNameKey \n     * @param {String} opts.configsamlSsoURL \n     * @param {String} opts.configsamlCa \n     * @param {String} opts.configsamlRedirectURI \n     * @param {String} opts.configsamlUsernameAttr \n     * @param {String} opts.configsamlEmailAttr \n     * @param {String} opts.configsamlGroupsAttr \n     * @param {String} opts.configsamlCaData \n     * @param {Boolean} opts.configsamlInsecureSkipSignatureValidation \n     * @param {String} opts.configsamlEntityIssuer \n     * @param {String} opts.configsamlSsoIssuer \n     * @param {String} opts.configsamlGroupsDelim \n     * @param {String} opts.configsamlNameIDPolicyFormat \n     * @param {String} opts.configbitbucketClientID \n     * @param {String} opts.configbitbucketClientSecret \n     * @param {String} opts.configbitbucketRedirectURI \n     * @param {Array.<String>} opts.configbitbucketTeams \n     * @param {String} opts.configgithubClientID \n     * @param {String} opts.configgithubClientSecret \n     * @param {String} opts.configgithubRedirectURI \n     * @param {Boolean} opts.configgithubLoadAllGroups \n     * @param {String} opts.configgithubTeamNameField \n     * @param {Boolean} opts.configgithubUseLoginAsID \n     * @param {String} opts.configgithubHostName For GitHub enterprise\n     * @param {String} opts.configgithubRootCA \n     * @param {String} opts.configgitlabBaseURL \n     * @param {String} opts.configgitlabClientID \n     * @param {String} opts.configgitlabClientSecret \n     * @param {String} opts.configgitlabRedirectURI \n     * @param {Array.<String>} opts.configgitlabGroups \n     * @param {Boolean} opts.configgitlabUserLoginAsID \n     * @param {String} opts.configlinkedinClientID \n     * @param {String} opts.configlinkedinClientSecret \n     * @param {String} opts.configlinkedinRedirectURI \n     * @param {String} opts.configmicrosoftClientID \n     * @param {String} opts.configmicrosoftClientSecret \n     * @param {String} opts.configmicrosoftRedirectURI \n     * @param {String} opts.configmicrosoftTenant \n     * @param {Array.<String>} opts.configmicrosoftGroups \n     * @param {Boolean} opts.configmicrosoftOnlySecurityGroups \n     * @param {String} opts.configmicrosoftGroupNameFormat \n     * @param {Boolean} opts.configmicrosoftUseGroupsAsWhitelist \n     * @param {String} opts.configldapConfigId \n     * @param {String} opts.configldapDomainName \n     * @param {String} opts.configldapHost \n     * @param {String} opts.configldapConnection \n     * @param {String} opts.configldapBindDN \n     * @param {String} opts.configldapBindPW \n     * @param {Boolean} opts.configldapBindAnonymous \n     * @param {Boolean} opts.configldapSkipVerifyCertificate \n     * @param {String} opts.configldapRootCA \n     * @param {String} opts.configldapRootCAData To be converted to []byte\n     * @param {Number} opts.configldapPageSize \n     * @param {Array.<String>} opts.configldapUserDNs \n     * @param {String} opts.configldapUserFilter \n     * @param {String} opts.configldapUserIDAttribute \n     * @param {String} opts.configldapUserDisplayAttribute \n     * @param {String} opts.configldapUserScope \n     * @param {String} opts.configldapMemberOfMappingMappingLeftAttribute \n     * @param {String} opts.configldapMemberOfMappingMappingRightAttribute \n     * @param {String} opts.configldapMemberOfMappingMappingRuleString \n     * @param {String} opts.configldapMemberOfMappingMappingRolePrefix \n     * @param {Array.<String>} opts.configldapMemberOfMappingGroupFilterDNs \n     * @param {String} opts.configldapMemberOfMappingGroupFilterFilter \n     * @param {String} opts.configldapMemberOfMappingGroupFilterIDAttribute \n     * @param {String} opts.configldapMemberOfMappingGroupFilterDisplayAttribute \n     * @param {String} opts.configldapMemberOfMappingGroupFilterScope \n     * @param {Boolean} opts.configldapMemberOfMappingSupportNestedGroup \n     * @param {Boolean} opts.configldapMemberOfMappingRealMemberOf \n     * @param {String} opts.configldapMemberOfMappingRealMemberOfAttribute \n     * @param {String} opts.configldapMemberOfMappingRealMemberOfValueFormat \n     * @param {String} opts.configldapMemberOfMappingPydioMemberOfAttribute \n     * @param {String} opts.configldapMemberOfMappingPydioMemberOfValueFormat \n     * @param {String} opts.configldapRolePrefix \n     * @param {String} opts.configldapSchedule \n     * @param {String} opts.configldapSchedulerDetails \n     * @param {Boolean} opts.configldapSyncOnly \n     * @param {String} opts.configoauthBaseURL \n     * @param {String} opts.configoauthAuthorizeURL \n     * @param {String} opts.configoauthTokenURL \n     * @param {String} opts.configoauthUserInfoURL \n     * @param {String} opts.configoauthClientID \n     * @param {String} opts.configoauthClientSecret \n     * @param {String} opts.configoauthRedirectURI \n     * @param {Array.<String>} opts.configoauthGroups \n     * @param {Boolean} opts.configoauthUseLoginAsID \n     * @param {Boolean} opts.configoauthUseBrokenAuthHeaderProvider \n     * @param {String} opts.configmockJsonIdentity \n     * @param {Array.<String>} opts.sites \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EntOAuth2ConnectorResponse}\n     */\n    deleteOAuth2Connector(id, opts) {\n      return this.deleteOAuth2ConnectorWithHttpInfo(id, opts)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * [Enterprise Only] Delete a versioning policy\n     * @param {String} uuid \n     * @param {Object} opts Optional parameters\n     * @param {String} opts.name \n     * @param {String} opts.description \n     * @param {String} opts.versionsDataSourceName \n     * @param {String} opts.versionsDataSourceBucket \n     * @param {String} opts.maxTotalSize \n     * @param {String} opts.maxSizePerFile \n     * @param {String} opts.ignoreFilesGreaterThan \n     * @param {module:model/String} opts.nodeDeletedStrategy  (default to 'KeepAll')\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EntDeleteVersioningPolicyResponse} and HTTP response\n     */\n    deleteVersioningPolicyWithHttpInfo(uuid, opts) {\n      opts = opts || {};\n      let postBody = null;\n      // verify the required parameter 'uuid' is set\n      if (uuid === undefined || uuid === null) {\n        throw new Error(\"Missing the required parameter 'uuid' when calling deleteVersioningPolicy\");\n      }\n\n      let pathParams = {\n        'Uuid': uuid\n      };\n      let queryParams = {\n        'Name': opts['name'],\n        'Description': opts['description'],\n        'VersionsDataSourceName': opts['versionsDataSourceName'],\n        'VersionsDataSourceBucket': opts['versionsDataSourceBucket'],\n        'MaxTotalSize': opts['maxTotalSize'],\n        'MaxSizePerFile': opts['maxSizePerFile'],\n        'IgnoreFilesGreaterThan': opts['ignoreFilesGreaterThan'],\n        'NodeDeletedStrategy': opts['nodeDeletedStrategy']\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = [];\n      let accepts = ['application/json'];\n      let returnType = EntDeleteVersioningPolicyResponse;\n      return this.apiClient.callApi(\n        '/config/versioning/{Uuid}', 'DELETE',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, null\n      );\n    }\n\n    /**\n     * [Enterprise Only] Delete a versioning policy\n     * @param {String} uuid \n     * @param {Object} opts Optional parameters\n     * @param {String} opts.name \n     * @param {String} opts.description \n     * @param {String} opts.versionsDataSourceName \n     * @param {String} opts.versionsDataSourceBucket \n     * @param {String} opts.maxTotalSize \n     * @param {String} opts.maxSizePerFile \n     * @param {String} opts.ignoreFilesGreaterThan \n     * @param {module:model/String} opts.nodeDeletedStrategy  (default to 'KeepAll')\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EntDeleteVersioningPolicyResponse}\n     */\n    deleteVersioningPolicy(uuid, opts) {\n      return this.deleteVersioningPolicyWithHttpInfo(uuid, opts)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * [Enterprise Only] Delete a virtual node\n     * @param {String} uuid ------------------------------------ Core identification of the node ------------------------------------\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.path \n     * @param {module:model/String} opts.type  (default to 'UNKNOWN')\n     * @param {String} opts.size Size of the file, or cumulated size of folder\n     * @param {String} opts.mTime Last modification Timestamp\n     * @param {Number} opts.mode Permission mode, like 0777\n     * @param {String} opts.etag Hash of the content if node is a LEAF, Uuid or\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EntDeleteVirtualNodeResponse} and HTTP response\n     */\n    deleteVirtualNodeWithHttpInfo(uuid, opts) {\n      opts = opts || {};\n      let postBody = null;\n      // verify the required parameter 'uuid' is set\n      if (uuid === undefined || uuid === null) {\n        throw new Error(\"Missing the required parameter 'uuid' when calling deleteVirtualNode\");\n      }\n\n      let pathParams = {\n        'Uuid': uuid\n      };\n      let queryParams = {\n        'Path': opts['path'],\n        'Type': opts['type'],\n        'Size': opts['size'],\n        'MTime': opts['mTime'],\n        'Mode': opts['mode'],\n        'Etag': opts['etag']\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = [];\n      let accepts = ['application/json'];\n      let returnType = EntDeleteVirtualNodeResponse;\n      return this.apiClient.callApi(\n        '/config/virtualnodes/{Uuid}', 'DELETE',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, null\n      );\n    }\n\n    /**\n     * [Enterprise Only] Delete a virtual node\n     * @param {String} uuid ------------------------------------ Core identification of the node ------------------------------------\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.path \n     * @param {module:model/String} opts.type  (default to 'UNKNOWN')\n     * @param {String} opts.size Size of the file, or cumulated size of folder\n     * @param {String} opts.mTime Last modification Timestamp\n     * @param {Number} opts.mode Permission mode, like 0777\n     * @param {String} opts.etag Hash of the content if node is a LEAF, Uuid or\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EntDeleteVirtualNodeResponse}\n     */\n    deleteVirtualNode(uuid, opts) {\n      return this.deleteVirtualNodeWithHttpInfo(uuid, opts)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * [Enterprise Only] List additional user directories\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EntExternalDirectoryCollection} and HTTP response\n     */\n    listExternalDirectoriesWithHttpInfo() {\n      let postBody = null;\n\n      let pathParams = {\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = [];\n      let accepts = ['application/json'];\n      let returnType = EntExternalDirectoryCollection;\n      return this.apiClient.callApi(\n        '/config/directories', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, null\n      );\n    }\n\n    /**\n     * [Enterprise Only] List additional user directories\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EntExternalDirectoryCollection}\n     */\n    listExternalDirectories() {\n      return this.listExternalDirectoriesWithHttpInfo()\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * [Enterprise Only] List oauth2 clients\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EntOAuth2ClientCollection} and HTTP response\n     */\n    listOAuth2ClientsWithHttpInfo() {\n      let postBody = null;\n\n      let pathParams = {\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = [];\n      let accepts = ['application/json'];\n      let returnType = EntOAuth2ClientCollection;\n      return this.apiClient.callApi(\n        '/config/oauth2clients', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, null\n      );\n    }\n\n    /**\n     * [Enterprise Only] List oauth2 clients\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EntOAuth2ClientCollection}\n     */\n    listOAuth2Clients() {\n      return this.listOAuth2ClientsWithHttpInfo()\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * [Enterprise Only] List oauth2 connectors\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EntOAuth2ConnectorCollection} and HTTP response\n     */\n    listOAuth2ConnectorsWithHttpInfo() {\n      let postBody = null;\n\n      let pathParams = {\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = [];\n      let accepts = ['application/json'];\n      let returnType = EntOAuth2ConnectorCollection;\n      return this.apiClient.callApi(\n        '/config/oauth2connectors', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, null\n      );\n    }\n\n    /**\n     * [Enterprise Only] List oauth2 connectors\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EntOAuth2ConnectorCollection}\n     */\n    listOAuth2Connectors() {\n      return this.listOAuth2ConnectorsWithHttpInfo()\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * [Enterprise Only] List configured sites\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EntListSitesResponse} and HTTP response\n     */\n    listSitesWithHttpInfo() {\n      let postBody = null;\n\n      let pathParams = {\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = [];\n      let accepts = ['application/json'];\n      let returnType = EntListSitesResponse;\n      return this.apiClient.callApi(\n        '/config/sites', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, null\n      );\n    }\n\n    /**\n     * [Enterprise Only] List configured sites\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EntListSitesResponse}\n     */\n    listSites() {\n      return this.listSitesWithHttpInfo()\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * [Enterprise Only] Sends an arbitrary config and try to ping the server and bind\n     * @param {module:model/EntExternalDirectoryPingRequest} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EntExternalDirectoryTestResponse} and HTTP response\n     */\n    pingExternalDirectoryWithHttpInfo(body) {\n      let postBody = body;\n      // verify the required parameter 'body' is set\n      if (body === undefined || body === null) {\n        throw new Error(\"Missing the required parameter 'body' when calling pingExternalDirectory\");\n      }\n\n      let pathParams = {\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = EntExternalDirectoryTestResponse;\n      return this.apiClient.callApi(\n        '/config/directories-test/ping', 'POST',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, null\n      );\n    }\n\n    /**\n     * [Enterprise Only] Sends an arbitrary config and try to ping the server and bind\n     * @param {module:model/EntExternalDirectoryPingRequest} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EntExternalDirectoryTestResponse}\n     */\n    pingExternalDirectory(body) {\n      return this.pingExternalDirectoryWithHttpInfo(body)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * [Enterprise Only] Add/Create an external directory\n     * @param {String} configId Id of the external directory\n     * @param {module:model/EntExternalDirectoryConfig} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EntExternalDirectoryResponse} and HTTP response\n     */\n    putExternalDirectoryWithHttpInfo(configId, body) {\n      let postBody = body;\n      // verify the required parameter 'configId' is set\n      if (configId === undefined || configId === null) {\n        throw new Error(\"Missing the required parameter 'configId' when calling putExternalDirectory\");\n      }\n      // verify the required parameter 'body' is set\n      if (body === undefined || body === null) {\n        throw new Error(\"Missing the required parameter 'body' when calling putExternalDirectory\");\n      }\n\n      let pathParams = {\n        'ConfigId': configId\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = EntExternalDirectoryResponse;\n      return this.apiClient.callApi(\n        '/config/directories/{ConfigId}', 'PUT',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, null\n      );\n    }\n\n    /**\n     * [Enterprise Only] Add/Create an external directory\n     * @param {String} configId Id of the external directory\n     * @param {module:model/EntExternalDirectoryConfig} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EntExternalDirectoryResponse}\n     */\n    putExternalDirectory(configId, body) {\n      return this.putExternalDirectoryWithHttpInfo(configId, body)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * [Enterprise Only] Add/Create a new oauth2 client\n     * @param {String} clientId \n     * @param {module:model/InlineObject} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EntOAuth2ClientResponse} and HTTP response\n     */\n    putOAuth2ClientWithHttpInfo(clientId, body) {\n      let postBody = body;\n      // verify the required parameter 'clientId' is set\n      if (clientId === undefined || clientId === null) {\n        throw new Error(\"Missing the required parameter 'clientId' when calling putOAuth2Client\");\n      }\n      // verify the required parameter 'body' is set\n      if (body === undefined || body === null) {\n        throw new Error(\"Missing the required parameter 'body' when calling putOAuth2Client\");\n      }\n\n      let pathParams = {\n        'client_id': clientId\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = EntOAuth2ClientResponse;\n      return this.apiClient.callApi(\n        '/config/oauth2clients/{client_id}', 'PUT',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, null\n      );\n    }\n\n    /**\n     * [Enterprise Only] Add/Create a new oauth2 client\n     * @param {String} clientId \n     * @param {module:model/InlineObject} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EntOAuth2ClientResponse}\n     */\n    putOAuth2Client(clientId, body) {\n      return this.putOAuth2ClientWithHttpInfo(clientId, body)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * [Enterprise Only] Add/Create a new oauth2 client\n     * @param {String} id \n     * @param {module:model/InlineObject1} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EntOAuth2ConnectorResponse} and HTTP response\n     */\n    putOAuth2ConnectorWithHttpInfo(id, body) {\n      let postBody = body;\n      // verify the required parameter 'id' is set\n      if (id === undefined || id === null) {\n        throw new Error(\"Missing the required parameter 'id' when calling putOAuth2Connector\");\n      }\n      // verify the required parameter 'body' is set\n      if (body === undefined || body === null) {\n        throw new Error(\"Missing the required parameter 'body' when calling putOAuth2Connector\");\n      }\n\n      let pathParams = {\n        'id': id\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = EntOAuth2ConnectorResponse;\n      return this.apiClient.callApi(\n        '/config/oauth2connectors/{id}', 'PUT',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, null\n      );\n    }\n\n    /**\n     * [Enterprise Only] Add/Create a new oauth2 client\n     * @param {String} id \n     * @param {module:model/InlineObject1} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EntOAuth2ConnectorResponse}\n     */\n    putOAuth2Connector(id, body) {\n      return this.putOAuth2ConnectorWithHttpInfo(id, body)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * [Enterprise Only] Add/Create a new oauth2 client\n     * @param {module:model/AuthOAuth2ConnectorCollection} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EntOAuth2ConnectorResponse} and HTTP response\n     */\n    putOAuth2ConnectorsWithHttpInfo(body) {\n      let postBody = body;\n      // verify the required parameter 'body' is set\n      if (body === undefined || body === null) {\n        throw new Error(\"Missing the required parameter 'body' when calling putOAuth2Connectors\");\n      }\n\n      let pathParams = {\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = EntOAuth2ConnectorResponse;\n      return this.apiClient.callApi(\n        '/config/oauth2connectors', 'PUT',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, null\n      );\n    }\n\n    /**\n     * [Enterprise Only] Add/Create a new oauth2 client\n     * @param {module:model/AuthOAuth2ConnectorCollection} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EntOAuth2ConnectorResponse}\n     */\n    putOAuth2Connectors(body) {\n      return this.putOAuth2ConnectorsWithHttpInfo(body)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * [Enterprise Only] Create or update a versioning policy\n     * @param {String} uuid \n     * @param {module:model/InlineObject2} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/TreeVersioningPolicy} and HTTP response\n     */\n    putVersioningPolicyWithHttpInfo(uuid, body) {\n      let postBody = body;\n      // verify the required parameter 'uuid' is set\n      if (uuid === undefined || uuid === null) {\n        throw new Error(\"Missing the required parameter 'uuid' when calling putVersioningPolicy\");\n      }\n      // verify the required parameter 'body' is set\n      if (body === undefined || body === null) {\n        throw new Error(\"Missing the required parameter 'body' when calling putVersioningPolicy\");\n      }\n\n      let pathParams = {\n        'Uuid': uuid\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = TreeVersioningPolicy;\n      return this.apiClient.callApi(\n        '/config/versioning/{Uuid}', 'POST',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, null\n      );\n    }\n\n    /**\n     * [Enterprise Only] Create or update a versioning policy\n     * @param {String} uuid \n     * @param {module:model/InlineObject2} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/TreeVersioningPolicy}\n     */\n    putVersioningPolicy(uuid, body) {\n      return this.putVersioningPolicyWithHttpInfo(uuid, body)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * [Enterprise Only] Create or update a virtual node\n     * @param {String} uuid ------------------------------------ Core identification of the node ------------------------------------\n     * @param {module:model/InlineObject3} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/TreeNode} and HTTP response\n     */\n    putVirtualNodeWithHttpInfo(uuid, body) {\n      let postBody = body;\n      // verify the required parameter 'uuid' is set\n      if (uuid === undefined || uuid === null) {\n        throw new Error(\"Missing the required parameter 'uuid' when calling putVirtualNode\");\n      }\n      // verify the required parameter 'body' is set\n      if (body === undefined || body === null) {\n        throw new Error(\"Missing the required parameter 'body' when calling putVirtualNode\");\n      }\n\n      let pathParams = {\n        'Uuid': uuid\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = TreeNode;\n      return this.apiClient.callApi(\n        '/config/virtualnodes/{Uuid}', 'POST',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, null\n      );\n    }\n\n    /**\n     * [Enterprise Only] Create or update a virtual node\n     * @param {String} uuid ------------------------------------ Core identification of the node ------------------------------------\n     * @param {module:model/InlineObject3} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/TreeNode}\n     */\n    putVirtualNode(uuid, body) {\n      return this.putVirtualNodeWithHttpInfo(uuid, body)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * [Enterprise Only] Sends an arbitrary config and try to ldapsearch using a given SearchFilter\n     * @param {module:model/EntExternalDirectorySearchRequest} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EntExternalDirectoryTestResponse} and HTTP response\n     */\n    searchExternalDirectoryWithHttpInfo(body) {\n      let postBody = body;\n      // verify the required parameter 'body' is set\n      if (body === undefined || body === null) {\n        throw new Error(\"Missing the required parameter 'body' when calling searchExternalDirectory\");\n      }\n\n      let pathParams = {\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = EntExternalDirectoryTestResponse;\n      return this.apiClient.callApi(\n        '/config/directories-test/search', 'POST',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, null\n      );\n    }\n\n    /**\n     * [Enterprise Only] Sends an arbitrary config and try to ldapsearch using a given SearchFilter\n     * @param {module:model/EntExternalDirectorySearchRequest} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EntExternalDirectoryTestResponse}\n     */\n    searchExternalDirectory(body) {\n      return this.searchExternalDirectoryWithHttpInfo(body)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n}\n"],"file":"EnterpriseConfigServiceApi.js"}