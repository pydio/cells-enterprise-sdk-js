{"version":3,"sources":["../../src/api/EnterpriseTemplatesServiceApi.js"],"names":["EnterpriseTemplatesServiceApi","apiClient","ApiClient","instance","body","postBody","undefined","Error","pathParams","queryParams","headerParams","formParams","authNames","contentTypes","accepts","returnType","EntCreateNodeTemplateResponse","callApi","createNodeTemplateWithHttpInfo","then","response_and_data","data","templateUuid","EntDeleteMetaTemplateResponse","deleteMetaTemplateWithHttpInfo","EntDeleteNodeTemplateResponse","deleteNodeTemplateWithHttpInfo","opts","EntListMetaTemplateResponse","listMetaTemplatesWithHttpInfo","EntPutMetaTemplateResponse","putMetaTemplateWithHttpInfo"],"mappings":"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","sourcesContent":["/**\n * Pydio Cells Enterprise Rest API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 2.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n *\n */\n\n\nimport ApiClient from \"../ApiClient\";\nimport EntCreateNodeTemplateRequest from '../model/EntCreateNodeTemplateRequest';\nimport EntCreateNodeTemplateResponse from '../model/EntCreateNodeTemplateResponse';\nimport EntDeleteMetaTemplateResponse from '../model/EntDeleteMetaTemplateResponse';\nimport EntDeleteNodeTemplateResponse from '../model/EntDeleteNodeTemplateResponse';\nimport EntListMetaTemplateResponse from '../model/EntListMetaTemplateResponse';\nimport EntPutMetaTemplateRequest from '../model/EntPutMetaTemplateRequest';\nimport EntPutMetaTemplateResponse from '../model/EntPutMetaTemplateResponse';\nimport RpcStatus from '../model/RpcStatus';\n\n/**\n* EnterpriseTemplatesService service.\n* @module api/EnterpriseTemplatesServiceApi\n* @version 2.0\n*/\nexport default class EnterpriseTemplatesServiceApi {\n\n    /**\n    * Constructs a new EnterpriseTemplatesServiceApi. \n    * @alias module:api/EnterpriseTemplatesServiceApi\n    * @class\n    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,\n    * default to {@link module:ApiClient#instance} if unspecified.\n    */\n    constructor(apiClient) {\n        this.apiClient = apiClient || ApiClient.instance;\n    }\n\n\n\n    /**\n     * Create a template from a specific node\n     * @param {module:model/EntCreateNodeTemplateRequest} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EntCreateNodeTemplateResponse} and HTTP response\n     */\n    createNodeTemplateWithHttpInfo(body) {\n      let postBody = body;\n      // verify the required parameter 'body' is set\n      if (body === undefined || body === null) {\n        throw new Error(\"Missing the required parameter 'body' when calling createNodeTemplate\");\n      }\n\n      let pathParams = {\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = EntCreateNodeTemplateResponse;\n      return this.apiClient.callApi(\n        '/templates/node', 'POST',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, null\n      );\n    }\n\n    /**\n     * Create a template from a specific node\n     * @param {module:model/EntCreateNodeTemplateRequest} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EntCreateNodeTemplateResponse}\n     */\n    createNodeTemplate(body) {\n      return this.createNodeTemplateWithHttpInfo(body)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * Delete an arbitrary metadata template\n     * @param {String} templateUuid \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EntDeleteMetaTemplateResponse} and HTTP response\n     */\n    deleteMetaTemplateWithHttpInfo(templateUuid) {\n      let postBody = null;\n      // verify the required parameter 'templateUuid' is set\n      if (templateUuid === undefined || templateUuid === null) {\n        throw new Error(\"Missing the required parameter 'templateUuid' when calling deleteMetaTemplate\");\n      }\n\n      let pathParams = {\n        'TemplateUuid': templateUuid\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = [];\n      let accepts = ['application/json'];\n      let returnType = EntDeleteMetaTemplateResponse;\n      return this.apiClient.callApi(\n        '/templates/meta/{TemplateUuid}', 'DELETE',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, null\n      );\n    }\n\n    /**\n     * Delete an arbitrary metadata template\n     * @param {String} templateUuid \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EntDeleteMetaTemplateResponse}\n     */\n    deleteMetaTemplate(templateUuid) {\n      return this.deleteMetaTemplateWithHttpInfo(templateUuid)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * Create a template from a specific node\n     * @param {String} templateUuid \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EntDeleteNodeTemplateResponse} and HTTP response\n     */\n    deleteNodeTemplateWithHttpInfo(templateUuid) {\n      let postBody = null;\n      // verify the required parameter 'templateUuid' is set\n      if (templateUuid === undefined || templateUuid === null) {\n        throw new Error(\"Missing the required parameter 'templateUuid' when calling deleteNodeTemplate\");\n      }\n\n      let pathParams = {\n        'TemplateUuid': templateUuid\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = [];\n      let accepts = ['application/json'];\n      let returnType = EntDeleteNodeTemplateResponse;\n      return this.apiClient.callApi(\n        '/templates/node/{TemplateUuid}', 'DELETE',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, null\n      );\n    }\n\n    /**\n     * Create a template from a specific node\n     * @param {String} templateUuid \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EntDeleteNodeTemplateResponse}\n     */\n    deleteNodeTemplate(templateUuid) {\n      return this.deleteNodeTemplateWithHttpInfo(templateUuid)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * Store an arbitrary metadata template\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.namespace \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EntListMetaTemplateResponse} and HTTP response\n     */\n    listMetaTemplatesWithHttpInfo(opts) {\n      opts = opts || {};\n      let postBody = null;\n\n      let pathParams = {\n      };\n      let queryParams = {\n        'Namespace': opts['namespace']\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = [];\n      let accepts = ['application/json'];\n      let returnType = EntListMetaTemplateResponse;\n      return this.apiClient.callApi(\n        '/templates/meta', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, null\n      );\n    }\n\n    /**\n     * Store an arbitrary metadata template\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.namespace \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EntListMetaTemplateResponse}\n     */\n    listMetaTemplates(opts) {\n      return this.listMetaTemplatesWithHttpInfo(opts)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * Store an arbitrary metadata template\n     * @param {module:model/EntPutMetaTemplateRequest} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EntPutMetaTemplateResponse} and HTTP response\n     */\n    putMetaTemplateWithHttpInfo(body) {\n      let postBody = body;\n      // verify the required parameter 'body' is set\n      if (body === undefined || body === null) {\n        throw new Error(\"Missing the required parameter 'body' when calling putMetaTemplate\");\n      }\n\n      let pathParams = {\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = EntPutMetaTemplateResponse;\n      return this.apiClient.callApi(\n        '/templates/meta', 'PUT',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, null\n      );\n    }\n\n    /**\n     * Store an arbitrary metadata template\n     * @param {module:model/EntPutMetaTemplateRequest} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EntPutMetaTemplateResponse}\n     */\n    putMetaTemplate(body) {\n      return this.putMetaTemplateWithHttpInfo(body)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n}\n"],"file":"EnterpriseTemplatesServiceApi.js"}