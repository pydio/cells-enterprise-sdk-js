{"version":3,"sources":["../../src/api/SchedulerServiceApi.js"],"names":["SchedulerServiceApi","apiClient","ApiClient","instance","templateName","postBody","undefined","Error","pathParams","queryParams","headerParams","formParams","authNames","contentTypes","accepts","returnType","EntDeleteActionTemplateResponse","callApi","deleteActionTemplateWithHttpInfo","then","response_and_data","data","jobID","JobsDeleteJobResponse","deleteJobWithHttpInfo","name","EntDeleteJobTemplateResponse","deleteJobTemplateWithHttpInfo","EntDeleteSelectorTemplateResponse","deleteSelectorTemplateWithHttpInfo","body","EntPlaygroundResponse","executePlaygroundCodeWithHttpInfo","EntListActionTemplatesResponse","listActionTemplatesWithHttpInfo","type","EntDocTemplatesResponse","listDocTemplatesWithHttpInfo","EntListJobTemplatesResponse","listJobTemplatesWithHttpInfo","EntListSelectorTemplatesResponse","listSelectorTemplatesWithHttpInfo","EntPutActionTemplateResponse","putActionTemplateWithHttpInfo","JobsPutJobResponse","putJobWithHttpInfo","EntPutJobTemplateResponse","putJobTemplateWithHttpInfo","EntPutSelectorTemplateResponse","putSelectorTemplateWithHttpInfo"],"mappings":"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","sourcesContent":["/**\n * Pydio Cells Enterprise Rest API\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 2.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n\nimport ApiClient from \"../ApiClient\";\nimport EntDeleteActionTemplateResponse from '../model/EntDeleteActionTemplateResponse';\nimport EntDeleteJobTemplateResponse from '../model/EntDeleteJobTemplateResponse';\nimport EntDeleteSelectorTemplateResponse from '../model/EntDeleteSelectorTemplateResponse';\nimport EntDocTemplatesResponse from '../model/EntDocTemplatesResponse';\nimport EntListActionTemplatesRequest from '../model/EntListActionTemplatesRequest';\nimport EntListActionTemplatesResponse from '../model/EntListActionTemplatesResponse';\nimport EntListJobTemplatesRequest from '../model/EntListJobTemplatesRequest';\nimport EntListJobTemplatesResponse from '../model/EntListJobTemplatesResponse';\nimport EntListSelectorTemplatesRequest from '../model/EntListSelectorTemplatesRequest';\nimport EntListSelectorTemplatesResponse from '../model/EntListSelectorTemplatesResponse';\nimport EntPlaygroundRequest from '../model/EntPlaygroundRequest';\nimport EntPlaygroundResponse from '../model/EntPlaygroundResponse';\nimport EntPutActionTemplateRequest from '../model/EntPutActionTemplateRequest';\nimport EntPutActionTemplateResponse from '../model/EntPutActionTemplateResponse';\nimport EntPutJobTemplateRequest from '../model/EntPutJobTemplateRequest';\nimport EntPutJobTemplateResponse from '../model/EntPutJobTemplateResponse';\nimport EntPutSelectorTemplateRequest from '../model/EntPutSelectorTemplateRequest';\nimport EntPutSelectorTemplateResponse from '../model/EntPutSelectorTemplateResponse';\nimport JobsDeleteJobResponse from '../model/JobsDeleteJobResponse';\nimport JobsPutJobRequest from '../model/JobsPutJobRequest';\nimport JobsPutJobResponse from '../model/JobsPutJobResponse';\n\n/**\n* SchedulerService service.\n* @module api/SchedulerServiceApi\n* @version 2.0\n*/\nexport default class SchedulerServiceApi {\n\n    /**\n    * Constructs a new SchedulerServiceApi. \n    * @alias module:api/SchedulerServiceApi\n    * @class\n    * @param {module:ApiClient} apiClient Optional API client implementation to use,\n    * default to {@link module:ApiClient#instance} if unspecified.\n    */\n    constructor(apiClient) {\n        this.apiClient = apiClient || ApiClient.instance;\n    }\n\n\n\n    /**\n     * Templates management for actions\n     * @param {String} templateName \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EntDeleteActionTemplateResponse} and HTTP response\n     */\n    deleteActionTemplateWithHttpInfo(templateName) {\n      let postBody = null;\n\n      // verify the required parameter 'templateName' is set\n      if (templateName === undefined || templateName === null) {\n        throw new Error(\"Missing the required parameter 'templateName' when calling deleteActionTemplate\");\n      }\n\n\n      let pathParams = {\n        'TemplateName': templateName\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = EntDeleteActionTemplateResponse;\n\n      return this.apiClient.callApi(\n        '/scheduler/templates/actions/{TemplateName}', 'DELETE',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * Templates management for actions\n     * @param {String} templateName \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EntDeleteActionTemplateResponse}\n     */\n    deleteActionTemplate(templateName) {\n      return this.deleteActionTemplateWithHttpInfo(templateName)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * [Enterprise Only] Delete a job from the scheduler\n     * @param {String} jobID \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/JobsDeleteJobResponse} and HTTP response\n     */\n    deleteJobWithHttpInfo(jobID) {\n      let postBody = null;\n\n      // verify the required parameter 'jobID' is set\n      if (jobID === undefined || jobID === null) {\n        throw new Error(\"Missing the required parameter 'jobID' when calling deleteJob\");\n      }\n\n\n      let pathParams = {\n        'JobID': jobID\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = JobsDeleteJobResponse;\n\n      return this.apiClient.callApi(\n        '/scheduler/jobs/{JobID}', 'DELETE',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * [Enterprise Only] Delete a job from the scheduler\n     * @param {String} jobID \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/JobsDeleteJobResponse}\n     */\n    deleteJob(jobID) {\n      return this.deleteJobWithHttpInfo(jobID)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * Templates management for Jobs\n     * @param {String} name \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EntDeleteJobTemplateResponse} and HTTP response\n     */\n    deleteJobTemplateWithHttpInfo(name) {\n      let postBody = null;\n\n      // verify the required parameter 'name' is set\n      if (name === undefined || name === null) {\n        throw new Error(\"Missing the required parameter 'name' when calling deleteJobTemplate\");\n      }\n\n\n      let pathParams = {\n        'Name': name\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = EntDeleteJobTemplateResponse;\n\n      return this.apiClient.callApi(\n        '/scheduler/templates/jobs/{Name}', 'DELETE',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * Templates management for Jobs\n     * @param {String} name \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EntDeleteJobTemplateResponse}\n     */\n    deleteJobTemplate(name) {\n      return this.deleteJobTemplateWithHttpInfo(name)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * Templates management for filters\n     * @param {String} templateName \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EntDeleteSelectorTemplateResponse} and HTTP response\n     */\n    deleteSelectorTemplateWithHttpInfo(templateName) {\n      let postBody = null;\n\n      // verify the required parameter 'templateName' is set\n      if (templateName === undefined || templateName === null) {\n        throw new Error(\"Missing the required parameter 'templateName' when calling deleteSelectorTemplate\");\n      }\n\n\n      let pathParams = {\n        'TemplateName': templateName\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = EntDeleteSelectorTemplateResponse;\n\n      return this.apiClient.callApi(\n        '/scheduler/templates/selectors/{TemplateName}', 'DELETE',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * Templates management for filters\n     * @param {String} templateName \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EntDeleteSelectorTemplateResponse}\n     */\n    deleteSelectorTemplate(templateName) {\n      return this.deleteSelectorTemplateWithHttpInfo(templateName)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * Run a code sample\n     * @param {module:model/EntPlaygroundRequest} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EntPlaygroundResponse} and HTTP response\n     */\n    executePlaygroundCodeWithHttpInfo(body) {\n      let postBody = body;\n\n      // verify the required parameter 'body' is set\n      if (body === undefined || body === null) {\n        throw new Error(\"Missing the required parameter 'body' when calling executePlaygroundCode\");\n      }\n\n\n      let pathParams = {\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = EntPlaygroundResponse;\n\n      return this.apiClient.callApi(\n        '/scheduler/templates/playground', 'POST',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * Run a code sample\n     * @param {module:model/EntPlaygroundRequest} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EntPlaygroundResponse}\n     */\n    executePlaygroundCode(body) {\n      return this.executePlaygroundCodeWithHttpInfo(body)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * Templates management for actions\n     * @param {module:model/EntListActionTemplatesRequest} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EntListActionTemplatesResponse} and HTTP response\n     */\n    listActionTemplatesWithHttpInfo(body) {\n      let postBody = body;\n\n      // verify the required parameter 'body' is set\n      if (body === undefined || body === null) {\n        throw new Error(\"Missing the required parameter 'body' when calling listActionTemplates\");\n      }\n\n\n      let pathParams = {\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = EntListActionTemplatesResponse;\n\n      return this.apiClient.callApi(\n        '/scheduler/templates/actions', 'POST',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * Templates management for actions\n     * @param {module:model/EntListActionTemplatesRequest} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EntListActionTemplatesResponse}\n     */\n    listActionTemplates(body) {\n      return this.listActionTemplatesWithHttpInfo(body)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * @param {String} type \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EntDocTemplatesResponse} and HTTP response\n     */\n    listDocTemplatesWithHttpInfo(type) {\n      let postBody = null;\n\n      // verify the required parameter 'type' is set\n      if (type === undefined || type === null) {\n        throw new Error(\"Missing the required parameter 'type' when calling listDocTemplates\");\n      }\n\n\n      let pathParams = {\n        'Type': type\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = EntDocTemplatesResponse;\n\n      return this.apiClient.callApi(\n        '/scheduler/templates/docs/{Type}', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * @param {String} type \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EntDocTemplatesResponse}\n     */\n    listDocTemplates(type) {\n      return this.listDocTemplatesWithHttpInfo(type)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * Templates management for Jobs\n     * @param {module:model/EntListJobTemplatesRequest} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EntListJobTemplatesResponse} and HTTP response\n     */\n    listJobTemplatesWithHttpInfo(body) {\n      let postBody = body;\n\n      // verify the required parameter 'body' is set\n      if (body === undefined || body === null) {\n        throw new Error(\"Missing the required parameter 'body' when calling listJobTemplates\");\n      }\n\n\n      let pathParams = {\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = EntListJobTemplatesResponse;\n\n      return this.apiClient.callApi(\n        '/scheduler/templates/jobs', 'POST',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * Templates management for Jobs\n     * @param {module:model/EntListJobTemplatesRequest} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EntListJobTemplatesResponse}\n     */\n    listJobTemplates(body) {\n      return this.listJobTemplatesWithHttpInfo(body)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * Templates management for filters\n     * @param {module:model/EntListSelectorTemplatesRequest} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EntListSelectorTemplatesResponse} and HTTP response\n     */\n    listSelectorTemplatesWithHttpInfo(body) {\n      let postBody = body;\n\n      // verify the required parameter 'body' is set\n      if (body === undefined || body === null) {\n        throw new Error(\"Missing the required parameter 'body' when calling listSelectorTemplates\");\n      }\n\n\n      let pathParams = {\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = EntListSelectorTemplatesResponse;\n\n      return this.apiClient.callApi(\n        '/scheduler/templates/selectors', 'POST',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * Templates management for filters\n     * @param {module:model/EntListSelectorTemplatesRequest} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EntListSelectorTemplatesResponse}\n     */\n    listSelectorTemplates(body) {\n      return this.listSelectorTemplatesWithHttpInfo(body)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * Templates management for actions\n     * @param {module:model/EntPutActionTemplateRequest} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EntPutActionTemplateResponse} and HTTP response\n     */\n    putActionTemplateWithHttpInfo(body) {\n      let postBody = body;\n\n      // verify the required parameter 'body' is set\n      if (body === undefined || body === null) {\n        throw new Error(\"Missing the required parameter 'body' when calling putActionTemplate\");\n      }\n\n\n      let pathParams = {\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = EntPutActionTemplateResponse;\n\n      return this.apiClient.callApi(\n        '/scheduler/templates/actions', 'PUT',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * Templates management for actions\n     * @param {module:model/EntPutActionTemplateRequest} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EntPutActionTemplateResponse}\n     */\n    putActionTemplate(body) {\n      return this.putActionTemplateWithHttpInfo(body)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * [Enterprise Only] Put a job in the scheduler\n     * @param {module:model/JobsPutJobRequest} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/JobsPutJobResponse} and HTTP response\n     */\n    putJobWithHttpInfo(body) {\n      let postBody = body;\n\n      // verify the required parameter 'body' is set\n      if (body === undefined || body === null) {\n        throw new Error(\"Missing the required parameter 'body' when calling putJob\");\n      }\n\n\n      let pathParams = {\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = JobsPutJobResponse;\n\n      return this.apiClient.callApi(\n        '/scheduler/jobs', 'PUT',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * [Enterprise Only] Put a job in the scheduler\n     * @param {module:model/JobsPutJobRequest} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/JobsPutJobResponse}\n     */\n    putJob(body) {\n      return this.putJobWithHttpInfo(body)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * Templates management for Jobs\n     * @param {String} name \n     * @param {module:model/EntPutJobTemplateRequest} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EntPutJobTemplateResponse} and HTTP response\n     */\n    putJobTemplateWithHttpInfo(name, body) {\n      let postBody = body;\n\n      // verify the required parameter 'name' is set\n      if (name === undefined || name === null) {\n        throw new Error(\"Missing the required parameter 'name' when calling putJobTemplate\");\n      }\n\n      // verify the required parameter 'body' is set\n      if (body === undefined || body === null) {\n        throw new Error(\"Missing the required parameter 'body' when calling putJobTemplate\");\n      }\n\n\n      let pathParams = {\n        'Name': name\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = EntPutJobTemplateResponse;\n\n      return this.apiClient.callApi(\n        '/scheduler/templates/jobs/{Name}', 'PUT',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * Templates management for Jobs\n     * @param {String} name \n     * @param {module:model/EntPutJobTemplateRequest} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EntPutJobTemplateResponse}\n     */\n    putJobTemplate(name, body) {\n      return this.putJobTemplateWithHttpInfo(name, body)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * Templates management for filters\n     * @param {module:model/EntPutSelectorTemplateRequest} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EntPutSelectorTemplateResponse} and HTTP response\n     */\n    putSelectorTemplateWithHttpInfo(body) {\n      let postBody = body;\n\n      // verify the required parameter 'body' is set\n      if (body === undefined || body === null) {\n        throw new Error(\"Missing the required parameter 'body' when calling putSelectorTemplate\");\n      }\n\n\n      let pathParams = {\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = EntPutSelectorTemplateResponse;\n\n      return this.apiClient.callApi(\n        '/scheduler/templates/selectors', 'PUT',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * Templates management for filters\n     * @param {module:model/EntPutSelectorTemplateRequest} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EntPutSelectorTemplateResponse}\n     */\n    putSelectorTemplate(body) {\n      return this.putSelectorTemplateWithHttpInfo(body)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n}\n"],"file":"SchedulerServiceApi.js"}