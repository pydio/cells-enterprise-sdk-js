{"version":3,"sources":["../../src/api/EnterpriseTokenServiceApi.js"],"names":["EnterpriseTokenServiceApi","apiClient","ApiClient","instance","body","postBody","undefined","Error","pathParams","queryParams","headerParams","formParams","authNames","contentTypes","accepts","returnType","EntPersonalAccessTokenResponse","callApi","generatePersonalAccessTokenWithHttpInfo","then","response_and_data","data","impersonatePersonalAccessTokenWithHttpInfo","AuthPatListResponse","listPersonalAccessTokensWithHttpInfo","tokenId","RestRevokeResponse","revokePersonalAccessTokenWithHttpInfo"],"mappings":"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","sourcesContent":["/**\n * Pydio Cells Enterprise Rest API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 2.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n *\n */\n\n\nimport ApiClient from \"../ApiClient\";\nimport AuthPatListResponse from '../model/AuthPatListResponse';\nimport EntListAccessTokensRequest from '../model/EntListAccessTokensRequest';\nimport EntPersonalAccessTokenRequest from '../model/EntPersonalAccessTokenRequest';\nimport EntPersonalAccessTokenResponse from '../model/EntPersonalAccessTokenResponse';\nimport RestRevokeResponse from '../model/RestRevokeResponse';\nimport RpcStatus from '../model/RpcStatus';\n\n/**\n* EnterpriseTokenService service.\n* @module api/EnterpriseTokenServiceApi\n* @version 2.0\n*/\nexport default class EnterpriseTokenServiceApi {\n\n    /**\n    * Constructs a new EnterpriseTokenServiceApi. \n    * @alias module:api/EnterpriseTokenServiceApi\n    * @class\n    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,\n    * default to {@link module:ApiClient#instance} if unspecified.\n    */\n    constructor(apiClient) {\n        this.apiClient = apiClient || ApiClient.instance;\n    }\n\n\n\n    /**\n     * Generate a personal access token\n     * @param {module:model/EntPersonalAccessTokenRequest} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EntPersonalAccessTokenResponse} and HTTP response\n     */\n    generatePersonalAccessTokenWithHttpInfo(body) {\n      let postBody = body;\n      // verify the required parameter 'body' is set\n      if (body === undefined || body === null) {\n        throw new Error(\"Missing the required parameter 'body' when calling generatePersonalAccessToken\");\n      }\n\n      let pathParams = {\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = EntPersonalAccessTokenResponse;\n      return this.apiClient.callApi(\n        '/auth/token/personal', 'POST',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, null\n      );\n    }\n\n    /**\n     * Generate a personal access token\n     * @param {module:model/EntPersonalAccessTokenRequest} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EntPersonalAccessTokenResponse}\n     */\n    generatePersonalAccessToken(body) {\n      return this.generatePersonalAccessTokenWithHttpInfo(body)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * Generate a personal access token\n     * @param {module:model/EntPersonalAccessTokenRequest} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EntPersonalAccessTokenResponse} and HTTP response\n     */\n    impersonatePersonalAccessTokenWithHttpInfo(body) {\n      let postBody = body;\n      // verify the required parameter 'body' is set\n      if (body === undefined || body === null) {\n        throw new Error(\"Missing the required parameter 'body' when calling impersonatePersonalAccessToken\");\n      }\n\n      let pathParams = {\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = EntPersonalAccessTokenResponse;\n      return this.apiClient.callApi(\n        '/auth/token/impersonate', 'POST',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, null\n      );\n    }\n\n    /**\n     * Generate a personal access token\n     * @param {module:model/EntPersonalAccessTokenRequest} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/EntPersonalAccessTokenResponse}\n     */\n    impersonatePersonalAccessToken(body) {\n      return this.impersonatePersonalAccessTokenWithHttpInfo(body)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * List generated personal access tokens, eventually filtering by user\n     * @param {module:model/EntListAccessTokensRequest} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/AuthPatListResponse} and HTTP response\n     */\n    listPersonalAccessTokensWithHttpInfo(body) {\n      let postBody = body;\n      // verify the required parameter 'body' is set\n      if (body === undefined || body === null) {\n        throw new Error(\"Missing the required parameter 'body' when calling listPersonalAccessTokens\");\n      }\n\n      let pathParams = {\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = AuthPatListResponse;\n      return this.apiClient.callApi(\n        '/auth/tokens', 'POST',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, null\n      );\n    }\n\n    /**\n     * List generated personal access tokens, eventually filtering by user\n     * @param {module:model/EntListAccessTokensRequest} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/AuthPatListResponse}\n     */\n    listPersonalAccessTokens(body) {\n      return this.listPersonalAccessTokensWithHttpInfo(body)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * Delete a personal access token based on its Uuid\n     * @param {String} tokenId Pass a specific Token ID to be revoked. If empty, request will use current JWT\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestRevokeResponse} and HTTP response\n     */\n    revokePersonalAccessTokenWithHttpInfo(tokenId) {\n      let postBody = null;\n      // verify the required parameter 'tokenId' is set\n      if (tokenId === undefined || tokenId === null) {\n        throw new Error(\"Missing the required parameter 'tokenId' when calling revokePersonalAccessToken\");\n      }\n\n      let pathParams = {\n        'TokenId': tokenId\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = [];\n      let accepts = ['application/json'];\n      let returnType = RestRevokeResponse;\n      return this.apiClient.callApi(\n        '/auth/tokens/{TokenId}', 'DELETE',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, null\n      );\n    }\n\n    /**\n     * Delete a personal access token based on its Uuid\n     * @param {String} tokenId Pass a specific Token ID to be revoked. If empty, request will use current JWT\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestRevokeResponse}\n     */\n    revokePersonalAccessToken(tokenId) {\n      return this.revokePersonalAccessTokenWithHttpInfo(tokenId)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n}\n"],"file":"EnterpriseTokenServiceApi.js"}