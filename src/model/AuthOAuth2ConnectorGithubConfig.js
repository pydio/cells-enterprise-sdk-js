/**
 * Pydio Cells Enterprise Rest API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AuthOAuth2ConnectorGithubConfigOrg from './AuthOAuth2ConnectorGithubConfigOrg';

/**
 * The AuthOAuth2ConnectorGithubConfig model module.
 * @module model/AuthOAuth2ConnectorGithubConfig
 * @version 2.0
 */
class AuthOAuth2ConnectorGithubConfig {
    /**
     * Constructs a new <code>AuthOAuth2ConnectorGithubConfig</code>.
     * @alias module:model/AuthOAuth2ConnectorGithubConfig
     */
    constructor() { 
        
        AuthOAuth2ConnectorGithubConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AuthOAuth2ConnectorGithubConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AuthOAuth2ConnectorGithubConfig} obj Optional instance to populate.
     * @return {module:model/AuthOAuth2ConnectorGithubConfig} The populated <code>AuthOAuth2ConnectorGithubConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AuthOAuth2ConnectorGithubConfig();

            if (data.hasOwnProperty('clientID')) {
                obj['clientID'] = ApiClient.convertToType(data['clientID'], 'String');
            }
            if (data.hasOwnProperty('clientSecret')) {
                obj['clientSecret'] = ApiClient.convertToType(data['clientSecret'], 'String');
            }
            if (data.hasOwnProperty('hostName')) {
                obj['hostName'] = ApiClient.convertToType(data['hostName'], 'String');
            }
            if (data.hasOwnProperty('loadAllGroups')) {
                obj['loadAllGroups'] = ApiClient.convertToType(data['loadAllGroups'], 'Boolean');
            }
            if (data.hasOwnProperty('orgs')) {
                obj['orgs'] = ApiClient.convertToType(data['orgs'], [AuthOAuth2ConnectorGithubConfigOrg]);
            }
            if (data.hasOwnProperty('redirectURI')) {
                obj['redirectURI'] = ApiClient.convertToType(data['redirectURI'], 'String');
            }
            if (data.hasOwnProperty('rootCA')) {
                obj['rootCA'] = ApiClient.convertToType(data['rootCA'], 'String');
            }
            if (data.hasOwnProperty('teamNameField')) {
                obj['teamNameField'] = ApiClient.convertToType(data['teamNameField'], 'String');
            }
            if (data.hasOwnProperty('useLoginAsID')) {
                obj['useLoginAsID'] = ApiClient.convertToType(data['useLoginAsID'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * @member {String} clientID
 */
AuthOAuth2ConnectorGithubConfig.prototype['clientID'] = undefined;

/**
 * @member {String} clientSecret
 */
AuthOAuth2ConnectorGithubConfig.prototype['clientSecret'] = undefined;

/**
 * @member {String} hostName
 */
AuthOAuth2ConnectorGithubConfig.prototype['hostName'] = undefined;

/**
 * @member {Boolean} loadAllGroups
 */
AuthOAuth2ConnectorGithubConfig.prototype['loadAllGroups'] = undefined;

/**
 * @member {Array.<module:model/AuthOAuth2ConnectorGithubConfigOrg>} orgs
 */
AuthOAuth2ConnectorGithubConfig.prototype['orgs'] = undefined;

/**
 * @member {String} redirectURI
 */
AuthOAuth2ConnectorGithubConfig.prototype['redirectURI'] = undefined;

/**
 * @member {String} rootCA
 */
AuthOAuth2ConnectorGithubConfig.prototype['rootCA'] = undefined;

/**
 * @member {String} teamNameField
 */
AuthOAuth2ConnectorGithubConfig.prototype['teamNameField'] = undefined;

/**
 * @member {Boolean} useLoginAsID
 */
AuthOAuth2ConnectorGithubConfig.prototype['useLoginAsID'] = undefined;






export default AuthOAuth2ConnectorGithubConfig;

